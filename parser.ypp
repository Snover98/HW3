%{
/*C++ lang stuff*/
#include <iostream>
#include "SymTable.h"
#include <vector>
#include "Node.h"

#define YYSTYPE Node*
int yylex();
void yyerror(const char*);

std::vector<StructType> structs = std::vector<StructType>();
std::vector<SymTable> tables_stack = std::vector<SymTable>(structs);




%}

%left LPAREN
%left RPAREN
%left PERIOD
%left BINOP
%left RELOP
%left AND
%left OR
%nonassoc NOT
%nonassoc TRUE
%nonassoc FALSE
%nonassoc RETURN
%nonassoc IF
%nonassoc ELSE
%nonassoc WHILE
%nonassoc BREAK
%nonassoc CONTINUE
%nonassoc SC
%nonassoc COMMA
%nonassoc LBRACE
%nonassoc RBRACE
%right ASSIGN
%nonassoc VOID
%nonassoc ID
%nonassoc NUM
%nonassoc STRING
%nonassoc INT
%nonassoc BYTE
%nonassoc B
%nonassoc BOOL
%nonassoc STRUCT









%%

Program:            Structs Funcs;

Funcs:              /*epsilon*/
                    | FuncDecl Funcs
;

FuncDecl:           RetType ID LPAREN Formals RPAREN LBRACE Statements RBRACE;

Structs:            /*epsilon*/
                    | StructsDecl Structs
;

StructsDecl:        STRUCT ID LBRACE StructMemList RBRACE SC;

RetType:            Type
                    | VOID
;

Formals:            /*epsilon*/
                    FormalsList
;

FormalsList:        FormalDecl
                    | FormalDecl COMMA FormalsList
;

FormalDecl:         Type ID
                    | StructType ID
;

StructMemList:      StructMem
                    | StructMem StructMemList
;

StructMem:          Type ID SC;

Statements:         Statement
                    | Statements Statement
;

Statement:          OpenStatement
                    | ClosedStatement
;

OpenStatement:      IF LPAREN Exp RPAREN Statement
                    | IF LPAREN Exp RPAREN ClosedStatement ELSE OpenStatement
                    | WHILE LPAREN Exp RPAREN OpenStatement
;

ClosedStatement:    SimpleStatement
                    | IF LPAREN Exp RPAREN ClosedStatement ELSE ClosedStatement
                    | WHILE LPAREN Exp RPAREN ClosedStatement
;

SimpleStatement:    LBRACE Statements RBRACE
                    | Type ID SC
                    | StructType ID SC
                    | STRUCT ID LBRACE StructMemList RBRACE SC
                    | Type ID ASSIGN Exp SC
                    | StructType ID ASSIGN Exp SC
                    | ID ASSIGN Exp SC
                    | ID PERIOD ID ASSIGN Exp SC
                    | Call SC
                    | RETURN SC
                    | RETURN Exp SC
                    | BREAK SC
                    | CONTINUE SC
;

Call:               ID LPAREN ExpList RPAREN
                    | ID LPAREN RPAREN
;

ExpList:            Exp
                    | Exp COMMA ExpList
;

Type:               INT
                    | BYTE
                    | BOOL
;

StructType:         STRUCT ID;

Exp:                LPAREN Exp RPAREN
                    | Exp BINOP Exp
                    | ID
                    | ID PERIOD ID
                    | Call
                    | NUM
                    | NUM B
                    | STRING
                    | TRUE
                    | FALSE
                    | NOT Exp
                    | Exp AND Exp
                    | Exp OR Exp
                    | Exp RELOP Exp
;



%%